# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~



# Home page
GET     /                       controllers.ProjectController.projects()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file            controllers.Assets.at(path="/public", file)


# Login
GET  /login        				controllers.AccountController.login()
GET  /signup        			controllers.AccountController.signup()
GET  /logout        			controllers.AccountController.logout()
POST /authenticate 				controllers.AccountController.authenticate()

# User
GET     /setting/profile       	controllers.AccountController.userProfile()


# Projects          
GET     /projects               controllers.ProjectController.projects()
GET     /projects/:id           controllers.ProjectController.viewProject(id: String)
GET     /projects/:id/edit      controllers.ProjectController.editProject(id: String)
GET     /projects/new/          controllers.ProjectController.newProject()
GET     /me/		       	    controllers.ProjectController.me()
GET     /projects/test/         controllers.ProjectController.testProject()




# API Project
GET     /api/projects              controllers.api.ProjectAPIController.projects()
GET     /api/projects/new          controllers.api.ProjectAPIController.createNewProject()
GET     /api/projects/:id          controllers.api.ProjectAPIController.project(id: String)
POST 	/api/projects			   controllers.api.ProjectAPIController.save()
GET     /api/user/:username/projects     controllers.api.ProjectAPIController.projectByOwner(username: String)
POST    /api/projects/:id/delete   controllers.api.ProjectAPIController.deleteProject(id: String)
POST    /api/projects/:id/publish  controllers.api.ProjectAPIController.publishProject(id: String)



# API Cards
GET    	/api/vote  controllers.api.ProjectAPIController.voteSample()

POST    /api/projects/:projectId/cards/:cardId/provide  controllers.api.ProjectAPIController.provide(projectId: String, cardId: String, quantity: Integer ?= 1)
POST    /api/projects/:projectId/cards/:cardId/vote  controllers.api.ProjectAPIController.vote(projectId: String, cardId: String)

PUT    	/api/projects/:projectId/cards/:cardId  		controllers.api.ProjectAPIController.updateCard(projectId: String, cardId: String)
POST    /api/projects/:projectId/cards/new/:type		controllers.api.ProjectAPIController.createCard(projectId: String, type: String)
POST    /api/projects/:projectId/cards  				controllers.api.ProjectAPIController.addCard(projectId: String)

DELETE 	/api/projects/:projectId/cards/:cardId 			controllers.api.ProjectAPIController.deleteCard(projectId: String, cardId: String)

GET     /api/projects/:projectId/cards/:cardId          				controllers.api.ProjectAPIController.card(projectId: String, cardId: String)
GET 	/api/projects/:projectId/contributions/:contributionId 			controllers.api.ProjectAPIController.contribution(projectId: String, contributionId: String)
POST 	/api/projects/:projectId/contributions/:contributionId/cancel 	controllers.api.ProjectAPIController.cancelContribution(projectId: String, contributionId: String)


# API Account

GET     /api/users/:user/summary       	    controllers.api.AccountAPIController.userSummary(user: String)
POST    /api/users/:user/follow       	    controllers.api.AccountAPIController.follow(user: String)
POST    /api/users/:user/unfollow       	controllers.api.AccountAPIController.unFollow(user: String)
GET     /api/users/:user       	    		controllers.api.AccountAPIController.user(user: String)



GET     /api/account     			controllers.api.AccountAPIController.account()
GET     /api/account/summary     	controllers.api.AccountAPIController.accountSummary()
GET     /api/accounts     			controllers.api.AccountAPIController.accounts()
POST    /api/signup     			controllers.api.AccountAPIController.signUp()
POST    /api/signin     			controllers.api.AccountAPIController.signIn()
POST    /api/profile     			controllers.api.AccountAPIController.updateProfile()

